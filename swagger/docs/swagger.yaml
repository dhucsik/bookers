basePath: /api/v1
definitions:
  admin.createAuthorRequest:
    properties:
      name:
        type: string
    type: object
  admin.createAuthorResp:
    properties:
      id:
        type: integer
    type: object
  admin.createAuthorResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/admin.createAuthorResp'
      status_code:
        type: integer
    type: object
  admin.createBookRequest:
    properties:
      author_ids:
        items:
          type: integer
        type: array
      category_ids:
        items:
          type: integer
        type: array
      description:
        type: string
      edition:
        type: string
      image:
        type: string
      language:
        type: string
      pub_date:
        type: string
      title:
        type: string
    type: object
  admin.createCategoryRequest:
    properties:
      name:
        type: string
    type: object
  auth.authRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  auth.authResp:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/models.UserWithoutPassword'
    type: object
  auth.authResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/auth.authResp'
      status_code:
        type: integer
    type: object
  auth.refreshRequest:
    properties:
      token:
        type: string
    type: object
  authors.authorItemResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  authors.listAuthorsResp:
    properties:
      authors:
        items:
          $ref: '#/definitions/authors.authorItemResponse'
        type: array
      total_count:
        type: integer
    type: object
  authors.listAuthorsResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/authors.listAuthorsResp'
      status_code:
        type: integer
    type: object
  books.addCommentRequest:
    properties:
      comment:
        type: string
    type: object
  books.authorResp:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  books.bookResponse:
    properties:
      authors:
        items:
          $ref: '#/definitions/books.authorResp'
        type: array
      categories:
        items:
          $ref: '#/definitions/books.categoryResp'
        type: array
      description:
        type: string
      edition:
        type: string
      id:
        type: integer
      image:
        type: string
      language:
        type: string
      pub_date:
        type: string
      rating:
        type: number
      title:
        type: string
    type: object
  books.categoryResp:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  books.createQuizRequest:
    properties:
      title:
        type: string
    type: object
  books.createResp:
    properties:
      id:
        type: integer
    type: object
  books.createResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/books.createResp'
      status_code:
        type: integer
    type: object
  books.getBookResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/books.bookResponse'
      status_code:
        type: integer
    type: object
  books.getRequestResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      request:
        $ref: '#/definitions/models.RequestWithFields'
      status_code:
        type: integer
    type: object
  books.getStockBookResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        items:
          $ref: '#/definitions/models.StockBookWithFields'
        type: array
      status_code:
        type: integer
    type: object
  books.listBooksResp:
    properties:
      books:
        items:
          $ref: '#/definitions/books.bookResponse'
        type: array
      total:
        type: integer
    type: object
  books.listBooksResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/books.listBooksResp'
      status_code:
        type: integer
    type: object
  books.listCommentsResponse:
    properties:
      comments:
        items:
          $ref: '#/definitions/models.BookComment'
        type: array
      inner_code:
        type: string
      message:
        type: string
      status_code:
        type: integer
    type: object
  books.listQuizzesResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        items:
          $ref: '#/definitions/models.QuizWithBase'
        type: array
      status_code:
        type: integer
    type: object
  books.listRequestsResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      requests:
        items:
          $ref: '#/definitions/models.RequestWithFields'
        type: array
      status_code:
        type: integer
    type: object
  books.requestReceived:
    properties:
      book_id:
        type: integer
    type: object
  books.searchBooksRequest:
    properties:
      author_ids:
        items:
          type: integer
        type: array
      category_ids:
        items:
          type: integer
        type: array
      limit:
        type: integer
      offset:
        type: integer
      query:
        type: string
    type: object
  books.searchStockBooksRequest:
    properties:
      authors:
        items:
          type: integer
        type: array
      categories:
        items:
          type: integer
        type: array
      city:
        type: string
      limit:
        type: integer
      offset:
        type: integer
      query:
        type: string
    type: object
  books.searchStockBooksResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        items:
          $ref: '#/definitions/models.StockBookWithFields'
        type: array
      status_code:
        type: integer
    type: object
  books.setRatingRequest:
    properties:
      rating:
        type: integer
    type: object
  books.updateCommentRequest:
    properties:
      comment:
        type: string
    type: object
  books.updateStockResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        type: string
      status_code:
        type: integer
    type: object
  books.uploadStockBookResp:
    properties:
      id:
        type: integer
      image_url:
        type: string
    type: object
  books.uploadStockBookResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/books.uploadStockBookResp'
      status_code:
        type: integer
    type: object
  categories.categoryItemResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  categories.listCategoriesResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/categories.categoryItemResponse'
        type: array
      inner_code:
        type: string
      message:
        type: string
      status_code:
        type: integer
    type: object
  models.Book:
    properties:
      description:
        type: string
      edition:
        type: string
      id:
        type: integer
      image:
        type: string
      language:
        type: string
      pub_date:
        type: string
      rating:
        type: number
      title:
        type: string
    type: object
  models.BookComment:
    properties:
      book_id:
        type: integer
      comment:
        type: string
      created_at:
        type: string
      id:
        type: integer
      user_id:
        type: integer
    type: object
  models.Question:
    properties:
      answer:
        type: string
      id:
        type: integer
      options:
        items:
          type: string
        type: array
      question:
        type: string
      quiz_id:
        type: integer
    type: object
  models.QuestionResult:
    properties:
      id:
        type: integer
      is_correct:
        type: boolean
      question_id:
        type: integer
      quiz_result_id:
        type: integer
      user_answer:
        type: string
    type: object
  models.Quiz:
    properties:
      book_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      questions_count:
        type: integer
      rating:
        type: number
      title:
        type: string
      user_id:
        type: integer
    type: object
  models.QuizComment:
    properties:
      comment:
        type: string
      created_at:
        type: string
      id:
        type: integer
      quiz_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.QuizQuestionWithFields:
    properties:
      book:
        $ref: '#/definitions/models.Book'
      correct:
        type: integer
      id:
        type: integer
      quiz:
        $ref: '#/definitions/models.Quiz'
      quiz_id:
        type: integer
      results:
        items:
          $ref: '#/definitions/models.QuestionResult'
        type: array
      total:
        type: integer
      user_id:
        type: integer
    type: object
  models.QuizResultWithFields:
    properties:
      book:
        $ref: '#/definitions/models.Book'
      correct:
        type: integer
      id:
        type: integer
      quiz:
        $ref: '#/definitions/models.Quiz'
      quiz_id:
        type: integer
      total:
        type: integer
      user_id:
        type: integer
    type: object
  models.QuizWithBase:
    properties:
      book:
        $ref: '#/definitions/models.Book'
      book_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      questions_count:
        type: integer
      rating:
        type: number
      title:
        type: string
      user:
        $ref: '#/definitions/models.UserWithoutPassword'
      user_id:
        type: integer
    type: object
  models.QuizWithFields:
    properties:
      book:
        $ref: '#/definitions/models.Book'
      book_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      questions:
        items:
          $ref: '#/definitions/models.Question'
        type: array
      questions_count:
        type: integer
      rating:
        type: number
      title:
        type: string
      user:
        $ref: '#/definitions/models.UserWithoutPassword'
      user_id:
        type: integer
    type: object
  models.QuizWithQuestionResults:
    properties:
      correct:
        type: integer
      id:
        type: integer
      quiz_id:
        type: integer
      results:
        items:
          $ref: '#/definitions/models.QuestionResult'
        type: array
      total:
        type: integer
      user_id:
        type: integer
    type: object
  models.RequestWithFields:
    properties:
      created_at:
        type: string
      id:
        type: integer
      receiver:
        $ref: '#/definitions/models.UserWithoutPassword'
      receiver_book:
        $ref: '#/definitions/models.Book'
      receiver_status:
        type: string
      sender:
        $ref: '#/definitions/models.UserWithoutPassword'
      sender_book:
        $ref: '#/definitions/models.Book'
      sender_status:
        type: string
      updated_at:
        type: string
    type: object
  models.StockBookWithFields:
    properties:
      book:
        $ref: '#/definitions/models.Book'
      book_id:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      user:
        $ref: '#/definitions/models.UserWithoutPassword'
      user_id:
        type: integer
    type: object
  models.UserWithoutPassword:
    properties:
      city:
        type: string
      email:
        type: string
      id:
        type: integer
      profile_pic:
        type: string
      username:
        type: string
    type: object
  quizzes.addCommentRequest:
    properties:
      comment:
        type: string
    type: object
  quizzes.addQuestionRequest:
    properties:
      answer:
        type: string
      options:
        items:
          type: string
        type: array
      question:
        type: string
    type: object
  quizzes.checkQuestionRequest:
    properties:
      answer:
        type: string
      question_id:
        type: integer
    type: object
  quizzes.checkQuizRequest:
    properties:
      user_answers:
        items:
          $ref: '#/definitions/quizzes.checkQuestionRequest'
        type: array
    type: object
  quizzes.checkQuizResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/models.QuizWithQuestionResults'
      status_code:
        type: integer
    type: object
  quizzes.createResp:
    properties:
      id:
        type: integer
    type: object
  quizzes.createResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/quizzes.createResp'
      status_code:
        type: integer
    type: object
  quizzes.getQuizResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/models.QuizWithFields'
      status_code:
        type: integer
    type: object
  quizzes.getQuizResultResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/models.QuizQuestionWithFields'
      status_code:
        type: integer
    type: object
  quizzes.getQuizResultsResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        items:
          $ref: '#/definitions/models.QuizResultWithFields'
        type: array
      status_code:
        type: integer
    type: object
  quizzes.listCommentsResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        items:
          $ref: '#/definitions/models.QuizComment'
        type: array
      status_code:
        type: integer
    type: object
  quizzes.listQuizzesResp:
    properties:
      quizzes:
        items:
          $ref: '#/definitions/models.QuizWithBase'
        type: array
      total_count:
        type: integer
    type: object
  quizzes.listQuizzesResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/quizzes.listQuizzesResp'
      status_code:
        type: integer
    type: object
  quizzes.listUserQuizzesResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        items:
          $ref: '#/definitions/models.QuizWithBase'
        type: array
      status_code:
        type: integer
    type: object
  quizzes.setRatingRequest:
    properties:
      rating:
        type: integer
    type: object
  quizzes.updateCommentRequest:
    properties:
      comment:
        type: string
    type: object
  quizzes.updateQuestionRequest:
    properties:
      answer:
        type: string
      options:
        items:
          type: string
        type: array
      question:
        type: string
    type: object
  quizzes.updateQuizRequest:
    properties:
      title:
        type: string
    type: object
  response.Response:
    properties:
      inner_code:
        type: string
      message:
        type: string
      status_code:
        type: integer
    type: object
  users.addLikedBookRequest:
    properties:
      book_id:
        type: integer
    type: object
  users.createUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  users.createUserResp:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
  users.createUserResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/users.createUserResp'
      status_code:
        type: integer
    type: object
  users.getUserByIDResp:
    properties:
      books_count:
        type: integer
      city:
        type: string
      email:
        type: string
      friend_status:
        type: string
      id:
        type: integer
      password:
        type: string
      share_count:
        type: integer
      username:
        type: string
    type: object
  users.getUserByIDResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/users.getUserByIDResp'
      status_code:
        type: integer
    type: object
  users.listFriendsResp:
    properties:
      friends:
        items:
          $ref: '#/definitions/users.listFriendsRespItem'
        type: array
    type: object
  users.listFriendsRespItem:
    properties:
      city:
        type: string
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  users.listFriendsResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        $ref: '#/definitions/users.listFriendsResp'
      status_code:
        type: integer
    type: object
  users.listLikedBooksResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        items:
          $ref: '#/definitions/models.Book'
        type: array
      status_code:
        type: integer
    type: object
  users.removeLikedBookRequest:
    properties:
      book_id:
        type: integer
    type: object
  users.setCityRequest:
    properties:
      city:
        type: string
    type: object
  users.updatePasswordRequest:
    properties:
      password:
        type: string
    type: object
  users.updateUsernameRequest:
    properties:
      username:
        type: string
    type: object
  users.uploadProfilePicResponse:
    properties:
      inner_code:
        type: string
      message:
        type: string
      result:
        type: string
      status_code:
        type: integer
    type: object
host: bookers.kz
info:
  contact: {}
  description: bookers server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.htm
  termsOfService: http://swagger.io/terms/
  title: Swagger Bookers API
  version: "1.0"
paths:
  /admin/authors:
    post:
      consumes:
      - application/json
      description: Create author
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/admin.createAuthorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/admin.createAuthorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create author
      tags:
      - admin
  /admin/authors/{id}:
    delete:
      consumes:
      - application/json
      description: Delete author
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete author
      tags:
      - admin
  /admin/books:
    post:
      consumes:
      - application/json
      description: Create book
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/admin.createBookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/admin.createAuthorResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create book
      tags:
      - admin
  /admin/categories:
    post:
      consumes:
      - application/json
      description: Create category
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/admin.createCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/admin.createAuthorResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create category
      tags:
      - admin
  /admin/categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete category
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete category
      tags:
      - admin
  /auth:
    post:
      consumes:
      - application/json
      description: Authenticate user
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.authRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/auth.authResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Authenticate user
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh token
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.refreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/auth.authResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Refresh token
      tags:
      - auth
  /authors:
    get:
      consumes:
      - application/json
      description: List authors
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/authors.listAuthorsResponse'
        "400":
          description: Invalid limit or offset
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: List authors
      tags:
      - authors
  /books:
    get:
      consumes:
      - application/json
      description: List books
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.listBooksResponse'
        "400":
          description: Invalid limit or offset
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: List books
      tags:
      - books
  /books/{id}:
    get:
      consumes:
      - application/json
      description: Get book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.getBookResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get book by ID
      tags:
      - books
  /books/{id}/comments:
    get:
      consumes:
      - application/json
      description: List comments
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.listCommentsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: List comments
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add comment
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: book ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/books.addCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.createResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Add comment
      tags:
      - books
  /books/{id}/quizzes:
    get:
      consumes:
      - application/json
      description: List quizzes by book
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.listQuizzesResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: List quizzes by book
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create quiz
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: book ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/books.createQuizRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/books.createResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create quiz
      tags:
      - books
  /books/{id}/rating:
    post:
      consumes:
      - application/json
      description: Set rating
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: book ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/books.setRatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Set rating
      tags:
      - books
  /books/{id}/request:
    post:
      consumes:
      - application/json
      description: Create request
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: stock book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create request
      tags:
      - requests
  /books/{id}/stock:
    get:
      consumes:
      - application/json
      description: Get stock by book
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.getStockBookResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get stock by book
      tags:
      - books
  /books/comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete comment
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete comment
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update comment request
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/books.updateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update comment request
      tags:
      - books
  /books/request:
    get:
      consumes:
      - application/json
      description: Get requests
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.listRequestsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get requests
      tags:
      - requests
  /books/request/{id}:
    get:
      consumes:
      - application/json
      description: Get request
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.getRequestResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get request
      tags:
      - requests
  /books/request/{id}/approve:
    put:
      consumes:
      - application/json
      description: Approve request
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Approve request
      tags:
      - requests
  /books/request/{id}/cancel:
    put:
      consumes:
      - application/json
      description: Cancel request
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Cancel request
      tags:
      - requests
  /books/request/{id}/received:
    put:
      consumes:
      - application/json
      description: Request received
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/books.requestReceived'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Request received
      tags:
      - requests
  /books/request/{id}/sender_accepted:
    put:
      consumes:
      - application/json
      description: Sender accepted
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Sender accepted
      tags:
      - requests
  /books/search:
    post:
      consumes:
      - application/json
      description: Search books
      parameters:
      - description: request
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/books.searchBooksRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.listBooksResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Search books
      tags:
      - books
  /books/stock:
    get:
      consumes:
      - application/json
      description: Get stock books
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.getStockBookResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get stock books
      tags:
      - books
  /books/stock/{id}:
    delete:
      consumes:
      - application/json
      description: Delete stock book
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Stock ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete stock book
      tags:
      - books
  /books/stock/{id}/image:
    put:
      consumes:
      - multipart/form-data
      description: Update stock image
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Stock ID
        in: path
        name: id
        required: true
        type: integer
      - description: image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.updateStockResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update stock image
      tags:
      - books
  /books/stock/search:
    post:
      consumes:
      - application/json
      description: Search stock books
      parameters:
      - description: request
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/books.searchStockBooksRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.searchStockBooksResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Search stock books
      tags:
      - books
  /books/stock/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload stock book
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: book ID
        in: formData
        name: book_id
        required: true
        type: integer
      - description: image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/books.uploadStockBookResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Upload stock book
      tags:
      - books
  /categories:
    get:
      consumes:
      - application/json
      description: List categories
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/categories.listCategoriesResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: List categories
      tags:
      - categories
  /quizzes:
    get:
      consumes:
      - application/json
      description: List quizzes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.listQuizzesResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: List quizzes
      tags:
      - quizzes
  /quizzes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete quiz
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: quiz ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete quiz
      tags:
      - quizzes
    get:
      consumes:
      - application/json
      description: Get quiz
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: quiz ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.getQuizResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get quiz
      tags:
      - quizzes
    put:
      consumes:
      - application/json
      description: Update quiz
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: quiz ID
        in: path
        name: id
        required: true
        type: integer
      - description: Title
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/quizzes.updateQuizRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update quiz
      tags:
      - quizzes
  /quizzes/{id}/check:
    post:
      consumes:
      - application/json
      description: Check quiz
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: quiz ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/quizzes.checkQuizRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.checkQuizResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Check quiz
      tags:
      - quizzes
  /quizzes/{id}/comments:
    get:
      consumes:
      - application/json
      description: List comments
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: quiz ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.listCommentsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: List comments
      tags:
      - quizzes
    post:
      consumes:
      - application/json
      description: Add comment
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: quiz ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/quizzes.addCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.createResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Add comment
      tags:
      - quizzes
  /quizzes/{id}/questions:
    post:
      consumes:
      - application/json
      description: Add question
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: quiz ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/quizzes.addQuestionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.createResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Add question
      tags:
      - quizzes
  /quizzes/{id}/rating:
    post:
      consumes:
      - application/json
      description: Set rating
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: quiz ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/quizzes.setRatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Set rating
      tags:
      - quizzes
  /quizzes/{id}/view:
    get:
      consumes:
      - application/json
      description: View quiz
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Quiz ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.getQuizResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: View quiz
      tags:
      - quizzes
  /quizzes/comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete comment
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete comment
      tags:
      - quizzes
    put:
      consumes:
      - application/json
      description: Update comment request
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/quizzes.updateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update comment request
      tags:
      - quizzes
  /quizzes/questions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete question
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: question ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete question
      tags:
      - quizzes
    put:
      consumes:
      - application/json
      description: Update question
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: question ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/quizzes.updateQuestionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update question
      tags:
      - quizzes
  /quizzes/results:
    get:
      consumes:
      - application/json
      description: Get quiz results
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.getQuizResultsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get quiz results
      tags:
      - quizzes
  /quizzes/results/{id}:
    get:
      consumes:
      - application/json
      description: Get quiz result
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: result ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.getQuizResultResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get quiz result
      tags:
      - quizzes
  /quizzes/user:
    get:
      consumes:
      - application/json
      description: List quizzes by user
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.listUserQuizzesResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: List quizzes by user
      tags:
      - quizzes
  /quizzes/user/{id}:
    get:
      consumes:
      - application/json
      description: List quizzes by user ID
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/quizzes.listUserQuizzesResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: List quizzes by user ID
      tags:
      - quizzes
  /users:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/users.createUserResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/users.getUserByIDResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get user by ID
      tags:
      - users
  /users/{id}/city:
    patch:
      consumes:
      - application/json
      description: Set city
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.setCityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Set city
      tags:
      - users
  /users/{id}/stock:
    get:
      consumes:
      - application/json
      description: Get stock books by user
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/books.getStockBookResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get stock books by user
      tags:
      - users
  /users/friends:
    get:
      consumes:
      - application/json
      description: Get friends
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/users.listFriendsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get friends
      tags:
      - friends
  /users/friends/{id}/accept:
    put:
      consumes:
      - application/json
      description: Accept friend request
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Friend ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Accept friend request
      tags:
      - friends
  /users/friends/{id}/request:
    post:
      consumes:
      - application/json
      description: Send friend request
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Friend ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Send friend request
      tags:
      - friends
  /users/friends/received:
    get:
      consumes:
      - application/json
      description: Get received friend requests
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/users.listFriendsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get received friend requests
      tags:
      - friends
  /users/friends/sent:
    get:
      consumes:
      - application/json
      description: Get sent friend requests
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/users.listFriendsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get sent friend requests
      tags:
      - friends
  /users/liked-books:
    delete:
      consumes:
      - application/json
      description: Remove liked book
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.removeLikedBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Remove liked book
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get liked books
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/users.listLikedBooksResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get liked books
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Add liked book
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.addLikedBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Add liked book
      tags:
      - users
  /users/password:
    patch:
      consumes:
      - application/json
      description: Update password
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.updatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update password
      tags:
      - users
  /users/profile/image:
    post:
      consumes:
      - multipart/form-data
      description: Upload profile picture
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/users.uploadProfilePicResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Upload profile picture
      tags:
      - users
  /users/username:
    patch:
      consumes:
      - application/json
      description: Update username
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.updateUsernameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update username
      tags:
      - users
swagger: "2.0"
